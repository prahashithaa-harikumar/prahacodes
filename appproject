import React, { useState } from 'react';
import CustomerData from './CustomerData';
import ProductSelection from './ProductSelection';
import FileUpload from './FileUpload';

const App = () => {
  const [step, setStep] = useState(1);  // To manage steps
  const [formData, setFormData] = useState({
    bankAccountId: '',
    fullName: '',
    dob: '',
    address: '',
    contactNumber: '',
    aadharNumber: '',
    panCardNumber: '',
    email: '',
    monthlyIncome: '',
    product: 'Silver',
    idProofFile: null,
    aadharFile: null,
    panCardFile: null,
  });

  const handleNext = () => {
    setStep(step + 1);
  };

  const handlePrevious = () => {
    setStep(step - 1);
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  const handleFileChange = (e) => {
    const { name, files } = e.target;
    setFormData({
      ...formData,
      [name]: files[0],
    });
  };

  const handleSubmit = () => {
    const dataText = `
      Full Name: ${formData.fullName}
      Date of Birth: ${formData.dob}
      Address: ${formData.address}
      Contact Number: ${formData.contactNumber}
      Aadhar Number: ${formData.aadharNumber}
      PAN Card Number: ${formData.panCardNumber}
      Email: ${formData.email}
      Monthly Income: ${formData.monthlyIncome}
      Product: ${formData.product}
    `;

    const blob = new Blob([dataText], { type: 'text/plain' });
    const link = document.createElement('a');
    link.href = window.URL.createObjectURL(blob);
    link.download = 'customer_application_data.txt';
    link.click();

    alert('Form submitted and data saved as a text file!');
  };

  return (
    <div className="max-w-2xl mx-auto p-6 bg-white shadow-lg rounded-lg">
      <h1 className="text-3xl font-semibold mb-6 text-center">CC Application Form</h1>

      {step === 1 && (
        <CustomerData formData={formData} handleInputChange={handleInputChange} />
      )}
      {step === 2 && (
        <ProductSelection formData={formData} handleInputChange={handleInputChange} />
      )}
      {step === 3 && (
        <FileUpload formData={formData} handleFileChange={handleFileChange} />
      )}

      <div className="flex justify-between mt-6">
        {step > 1 && (
          <button
            onClick={handlePrevious}
            className="px-4 py-2 bg-gray-500 text-white rounded-md"
          >
            Previous
          </button>
        )}
        {step < 3 && (
          <button
            onClick={handleNext}
            className="px-4 py-2 bg-blue-500 text-white rounded-md"
          >
            Next
          </button>
        )}
        {step === 3 && (
          <button
            onClick={handleSubmit}
            className="px-4 py-2 bg-green-500 text-white rounded-md"
          >
            Submit
          </button>
        )}
      </div>
    </div>
  );
};

export default App;