import React from 'react';
import { FormControl, FormLabel, Input, Select, FormErrorMessage, Box } from '@chakra-ui/react';

const CustomerData = ({ formData, handleInputChange, handleAutoPopulate, errors }) => {
  return (
    <Box>
      {/* Customer Type Selection */}
      <FormControl isInvalid={errors.customerType} mb={4}>
        <FormLabel>Customer Type</FormLabel>
        <Select
          name="customerType"
          value={formData.customerType}
          onChange={handleInputChange}
          placeholder="Select Customer Type"
        >
          <option value="new">New</option>
          <option value="existing">Existing</option>
        </Select>
        <FormErrorMessage>{errors.customerType}</FormErrorMessage>
      </FormControl>

      {/* Show Bank ID field only if "existing" is selected */}
      {formData.customerType === 'existing' && (
        <FormControl isInvalid={errors.bankAccountId} mb={4}>
          <FormLabel>Bank Account ID</FormLabel>
          <Input
            name="bankAccountId"
            value={formData.bankAccountId}
            onChange={handleInputChange}
            onBlur={handleAutoPopulate}  // Auto-populate fields if Bank ID is 123
            placeholder="Enter Bank Account ID"
          />
          <FormErrorMessage>{errors.bankAccountId}</FormErrorMessage>
        </FormControl>
      )}

      {/* Only show the rest of the form if customerType is "existing" and bankAccountId is provided */}
      {formData.customerType === 'existing' && formData.bankAccountId && (
        <>
          {/* Full Name */}
          <FormControl isInvalid={errors.fullName} mb={4}>
            <FormLabel>Full Name</FormLabel>
            <Input
              name="fullName"
              value={formData.fullName}
              onChange={handleInputChange}
              placeholder="Enter Full Name"
            />
            <FormErrorMessage>{errors.fullName}</FormErrorMessage>
          </FormControl>

          {/* Date of Birth */}
          <FormControl isInvalid={errors.dob} mb={4}>
            <FormLabel>Date of Birth</FormLabel>
            <Input
              type="date"
              name="dob"
              value={formData.dob}
              onChange={handleInputChange}
            />
            <FormErrorMessage>{errors.dob}</FormErrorMessage>
          </FormControl>

          {/* Address */}
          <FormControl isInvalid={errors.address} mb={4}>
            <FormLabel>Address</FormLabel>
            <Input
              name="address"
              value={formData.address}
              onChange={handleInputChange}
              placeholder="Enter Address"
            />
            <FormErrorMessage>{errors.address}</FormErrorMessage>
          </FormControl>

          {/* Email */}
          <FormControl isInvalid={errors.email} mb={4}>
            <FormLabel>Email</FormLabel>
            <Input
              name="email"
              type="email"
              value={formData.email}
              onChange={handleInputChange}
              placeholder="Enter Email"
            />
            <FormErrorMessage>{errors.email}</FormErrorMessage>
          </FormControl>

          {/* Contact Number */}
          <FormControl isInvalid={errors.contactNumber} mb={4}>
            <FormLabel>Contact Number</FormLabel>
            <Input
              name="contactNumber"
              type="tel"
              value={formData.contactNumber}
              onChange={handleInputChange}
              placeholder="Enter Contact Number"
            />
            <FormErrorMessage>{errors.contactNumber}</FormErrorMessage>
          </FormControl>

          {/* Aadhar Number */}
          <FormControl isInvalid={errors.aadharNumber} mb={4}>
            <FormLabel>Aadhar Number</FormLabel>
            <Input
              name="aadharNumber"
              value={formData.aadharNumber}
              onChange={handleInputChange}
              placeholder="Enter Aadhar Number"
            />
            <FormErrorMessage>{errors.aadharNumber}</FormErrorMessage>
          </FormControl>

          {/* PAN Card Number */}
          <FormControl isInvalid={errors.panCardNumber} mb={4}>
            <FormLabel>PAN Card Number</FormLabel>
            <Input
              name="panCardNumber"
              value={formData.panCardNumber}
              onChange={handleInputChange}
              placeholder="Enter PAN Card Number"
            />
            <FormErrorMessage>{errors.panCardNumber}</FormErrorMessage>
          </FormControl>

          {/* Monthly Income */}
          <FormControl isInvalid={errors.monthlyIncome} mb={4}>
            <FormLabel>Monthly Income</FormLabel>
            <Input
              name="monthlyIncome"
              value={formData.monthlyIncome}
              onChange={handleInputChange}
              placeholder="Enter Monthly Income"
            />
            <FormErrorMessage>{errors.monthlyIncome}</FormErrorMessage>
          </FormControl>
        </>
      )}

      {/* New Customer Fields */}
      {formData.customerType === 'new' && (
        <>
          {/* Full Name */}
          <FormControl isInvalid={errors.fullName} mb={4}>
            <FormLabel>Full Name</FormLabel>
            <Input
              name="fullName"
              value={formData.fullName}
              onChange={handleInputChange}
              placeholder="Enter Full Name"
            />
            <FormErrorMessage>{errors.fullName}</FormErrorMessage>
          </FormControl>

          {/* Date of Birth */}
          <FormControl isInvalid={errors.dob} mb={4}>
            <FormLabel>Date of Birth</FormLabel>
            <Input
              type="date"
              name="dob"
              value={formData.dob}
              onChange={handleInputChange}
            />
            <FormErrorMessage>{errors.dob}</FormErrorMessage>
          </FormControl>

          {/* Address */}
          <FormControl isInvalid={errors.address} mb={4}>
            <FormLabel>Address</FormLabel>
            <Input
              name="address"
              value={formData.address}
              onChange={handleInputChange}
              placeholder="Enter Address"
            />
            <FormErrorMessage>{errors.address}</FormErrorMessage>
          </FormControl>

          {/* Email */}
          <FormControl isInvalid={errors.email} mb={4}>
            <FormLabel>Email</FormLabel>
            <Input
              name="email"
              type="email"
              value={formData.email}
              onChange={handleInputChange}
              placeholder="Enter Email"
            />
            <FormErrorMessage>{errors.email}</FormErrorMessage>
          </FormControl>

          {/* Contact Number */}
          <FormControl isInvalid={errors.contactNumber} mb={4}>
            <FormLabel>Contact Number</FormLabel>
            <Input
              name="contactNumber"
              type="tel"
              value={formData.contactNumber}
              onChange={handleInputChange}
              placeholder="Enter Contact Number"
            />
            <FormErrorMessage>{errors.contactNumber}</FormErrorMessage>
          </FormControl>

          {/* Aadhar Number */}
          <FormControl isInvalid={errors.aadharNumber} mb={4}>
            <FormLabel>Aadhar Number</FormLabel>
            <Input
              name="aadharNumber"
              value={formData.aadharNumber}
              onChange={handleInputChange}
              placeholder="Enter Aadhar Number"
            />
            <FormErrorMessage>{errors.aadharNumber}</FormErrorMessage>
          </FormControl>

          {/* PAN Card Number */}
          <FormControl isInvalid={errors.panCardNumber} mb={4}>
            <FormLabel>PAN Card Number</FormLabel>
            <Input
              name="panCardNumber"
              value={formData.panCardNumber}
              onChange={handleInputChange}
              placeholder="Enter PAN Card Number"
            />
            <FormErrorMessage>{errors.panCardNumber}</FormErrorMessage>
          </FormControl>

          {/* Monthly Income */}
          <FormControl isInvalid={errors.monthlyIncome} mb={4}>
            <FormLabel>Monthly Income</FormLabel>
            <Input
              name="monthlyIncome"
              value={formData.monthlyIncome}
              onChange={handleInputChange}
              placeholder="Enter Monthly Income"
            />
            <FormErrorMessage>{errors.monthlyIncome}</FormErrorMessage>
          </FormControl>
        </>
      )}
    </Box>
  );
};

export default CustomerData;