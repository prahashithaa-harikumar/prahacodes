import React, { useState } from 'react';
import { Box, FormControl, FormLabel, Input, Select, FormErrorMessage, Text } from '@chakra-ui/react';

const CustomerData = ({ formData, handleInputChange, errors, setFormData }) => {
  const [customerType, setCustomerType] = useState('New');

  const handleCustomerTypeChange = (e) => {
    const type = e.target.value;
    setCustomerType(type);
    if (type === 'New') {
      setFormData(prev => ({ ...prev, bankId: '' }));
    }
  };

  const handleBankIdChange = (e) => {
    const { value } = e.target;
    setFormData(prev => ({ ...prev, bankId: value }));
    if (value === '123') { // Simulate fetching data based on bankId
      setFormData({
        ...prev,
        fullName: 'John Doe',
        dob: '1990-01-01',
        address: '123 Main St, City, Country',
        contactNumber: '9876543210',
        aadharNumber: '123412341234',
        panCardNumber: 'ABCDE1234F',
        email: 'johndoe@example.com',
        monthlyIncome: '50000'
      });
    }
  };

  return (
    <Box>
      <FormControl mb={4}>
        <FormLabel htmlFor="customerType">Customer Type</FormLabel>
        <Select
          id="customerType"
          name="customerType"
          value={customerType}
          onChange={handleCustomerTypeChange}
        >
          <option value="New">New</option>
          <option value="Existing">Existing</option>
        </Select>
      </FormControl>

      {customerType === 'Existing' && (
        <FormControl isInvalid={errors.bankId} mb={4}>
          <FormLabel htmlFor="bankId">Bank Account ID</FormLabel>
          <Input
            id="bankId"
            name="bankId"
            value={formData.bankId}
            onChange={handleBankIdChange}
          />
          <FormErrorMessage>{errors.bankId}</FormErrorMessage>
        </FormControl>
      )}

      {(customerType === 'New' || (customerType === 'Existing' && formData.bankId === '123')) && (
        <>
          <FormControl isInvalid={errors.fullName} mb={4}>
            <FormLabel htmlFor="fullName">Full Name</FormLabel>
            <Input
              id="fullName"
              name="fullName"
              value={formData.fullName}
              onChange={handleInputChange}
            />
            <FormErrorMessage>{errors.fullName}</FormErrorMessage>
          </FormControl>

          <FormControl isInvalid={errors.dob} mb={4}>
            <FormLabel htmlFor="dob">Date of Birth</FormLabel>
            <Input
              id="dob"
              name="dob"
              type="date"
              value={formData.dob}
              onChange={handleInputChange}
            />
            <FormErrorMessage>{errors.dob}</FormErrorMessage>
          </FormControl>

          <FormControl isInvalid={errors.address} mb={4}>
            <FormLabel htmlFor="address">Address</FormLabel>
            <Input
              id="address"
              name="address"
              value={formData.address}
              onChange={handleInputChange}
            />
            <FormErrorMessage>{errors.address}</FormErrorMessage>
          </FormControl>

          <FormControl isInvalid={errors.contactNumber} mb={4}>
            <FormLabel htmlFor="contactNumber">Contact Number</FormLabel>
            <Input
              id="contactNumber"
              name="contactNumber"
              value={formData.contactNumber}
              onChange={handleInputChange}
            />
            <FormErrorMessage>{errors.contactNumber}</FormErrorMessage>
          </FormControl>

          <FormControl isInvalid={errors.aadharNumber} mb={4}>
            <FormLabel htmlFor="aadharNumber">Aadhar Number</FormLabel>
            <Input
              id="aadharNumber"
              name="aadharNumber"
              value={formData.aadharNumber}
              onChange={handleInputChange}
            />
            <FormErrorMessage>{errors.aadharNumber}</FormErrorMessage>
          </FormControl>

          <FormControl isInvalid={errors.panCardNumber} mb={4}>
            <FormLabel htmlFor="panCardNumber">PAN Card Number</FormLabel>
            <Input
              id="panCardNumber"
              name="panCardNumber"
              value={formData.panCardNumber}
              onChange={handleInputChange}
            />
            <FormErrorMessage>{errors.panCardNumber}</FormErrorMessage>
          </FormControl>

          <FormControl isInvalid={errors.email} mb={4}>
            <FormLabel htmlFor="email">Email</FormLabel>
            <Input
              id="email"
              name="email"
              type="email"
              value={formData.email}
              onChange={handleInputChange}
            />
            <FormErrorMessage>{errors.email}</FormErrorMessage>
          </FormControl>

          <FormControl isInvalid={errors.monthlyIncome} mb={4}>
            <FormLabel htmlFor="monthlyIncome">Monthly Income</FormLabel>
            <Input
              id="monthlyIncome"
              name="monthlyIncome"
              type="number"
              value={formData.monthlyIncome}
              onChange={handleInputChange}
            />
            <FormErrorMessage>{errors.monthlyIncome}</FormErrorMessage>
          </FormControl>
        </>
      )}
    </Box>
  );
};

export default CustomerData;