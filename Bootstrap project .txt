import React, { useState, useEffect } from 'react';
import axios from 'axios';
import {
    FormControl,
    Select,
    Spinner,
    Input,
    VStack,
    Box
} from "@chakra-ui/react";

function App() {
    const [productTypes] = useState(['Silver', 'Gold', 'Platinum']);
    const [selectedProduct, setSelectedProduct] = useState('');
    const [productDetails, setProductDetails] = useState(null);
    const [loading, setLoading] = useState(false);

    const handleProductChange = (event) => {
        const selectedProduct = event.target.value;
        setSelectedProduct(selectedProduct);
        fetchProductDetails(selectedProduct);
    };

    const fetchProductDetails = async (cardType) => {
        setLoading(true);
        try {
            const response = await axios.get(`http://localhost:8080/api/products/type/${cardType}`);
            setProductDetails(response.data);
        } catch (error) {
            console.error("Error fetching product details:", error);
        } finally {
            setLoading(false);
        }
    };

    return (
        <VStack spacing={5}>
            <FormControl>
                <Select placeholder="Select Product Type" onChange={handleProductChange}>
                    {productTypes.map((type, index) => (
                        <option key={index} value={type}>
                            {type}
                        </option>
                    ))}
                </Select>
            </FormControl>

            {loading ? (
                <Spinner />
            ) : (
                productDetails && (
                    <Box>
                        <Input value={productDetails.usage} readOnly placeholder="Usage" />
                        <Input value={productDetails.affiliation} readOnly placeholder="Affiliation" />
                        <Input value={productDetails.card_type} readOnly placeholder="Card Type" />
                        <Input value={productDetails.card_limit} readOnly placeholder="Card Limit" />
                        <Input value={productDetails.transfer_amount} readOnly placeholder="Transfer Amount" />
                        <Input value={productDetails.valid_upto} readOnly placeholder="Valid Upto" />
                        <Input value={productDetails.balance_transfer} readOnly placeholder="Balance Transfer" />
                        <Input value={productDetails.effective_rate} readOnly placeholder="Effective Rate" />
                    </Box>
                )
            )}
        </VStack>
    );
}

export default App;